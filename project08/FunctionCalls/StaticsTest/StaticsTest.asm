@256
D=A
@SP
M=D
//call Sys.init with 0 args
@returnAddress0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0; JMP
(returnAddress0)
// Function declartion for Class1.set
(Class1.set)
@0
D=A
@R13
M=D
(LoopForArgs1)
@0
D=A-D
@continue1
D; JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M+1
@LoopForArgs1
0; JMP
(continue1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
A=M-1
D=M
@SP
M=M-1
@Class1.0
M=D
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
A=M-1
D=M
@SP
M=M-1
@Class1.1
M=D
//Push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Return code
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
A=D-A
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function declartion for Class1.get
(Class1.get)
@0
D=A
@R13
M=D
(LoopForArgs2)
@0
D=A-D
@continue2
D; JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M+1
@LoopForArgs2
0; JMP
(continue2)
//push static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
//Return code
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
A=D-A
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function declartion for Class2.set
(Class2.set)
@0
D=A
@R13
M=D
(LoopForArgs3)
@0
D=A-D
@continue3
D; JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M+1
@LoopForArgs3
0; JMP
(continue3)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
A=M-1
D=M
@SP
M=M-1
@Class2.0
M=D
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
A=M-1
D=M
@SP
M=M-1
@Class2.1
M=D
//Push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Return code
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
A=D-A
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function declartion for Class2.get
(Class2.get)
@0
D=A
@R13
M=D
(LoopForArgs4)
@0
D=A-D
@continue4
D; JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M+1
@LoopForArgs4
0; JMP
(continue4)
//push static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
//Return code
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
A=D-A
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
// Function declartion for Sys.init
(Sys.init)
@0
D=A
@R13
M=D
(LoopForArgs5)
@0
D=A-D
@continue5
D; JEQ
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R13
MD=M+1
@LoopForArgs5
0; JMP
(continue5)
//Push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class1.set with 2
@returnAddress6
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0; JMP
(returnAddress6)
//pop temp 5
@SP
A=M-1
D=M
@SP
M=M-1
@5
M=D
//Push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//Push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class2.set with 2
@returnAddress7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0; JMP
(returnAddress7)
//pop temp 5
@SP
A=M-1
D=M
@SP
M=M-1
@5
M=D
//call Class1.get with 0
@returnAddress8
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0; JMP
(returnAddress8)
//call Class2.get with 0
@returnAddress9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0; JMP
(returnAddress9)
//label WHILE
(Sys.init$WHILE)
// goto
@Sys.init$WHILE
0; JMP
